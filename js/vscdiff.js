// @ts-format-ignore-region
// @ts-format-ignore-endregion
// @ts-format-ignore-line
(()=>{"use strict";var e,t={790:function(e,t,n){var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||i(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(420),t),r(n(197),t),r(n(969),t),r(n(464),t),r(n(198),t)},177:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.CallbackIterable=t.reverseOrder=t.numberComparator=t.compareBy=t.CompareResult=t.findLastIndex=t.equals=void 0,t.equals=function(e,t,n=((e,t)=>e===t)){if(e===t)return!0;if(!e||!t)return!1;if(e.length!==t.length)return!1;for(let i=0,r=e.length;i<r;i++)if(!n(e[i],t[i]))return!1;return!0},t.findLastIndex=function(e,t){for(let n=e.length-1;n>=0;n--)if(t(e[n]))return n;return-1},function(e){e.isLessThan=function(e){return e<0},e.isLessThanOrEqual=function(e){return e<=0},e.isGreaterThan=function(e){return e>0}}(n||(t.CompareResult=n={})),t.compareBy=function(e,t){return(n,i)=>t(e(n),e(i))},t.numberComparator=(e,t)=>e-t,t.reverseOrder=function(e){return(t,n)=>-e(t,n)};class i{constructor(e){this.iterate=e}forEach(e){this.iterate((t=>(e(t),!0)))}toArray(){const e=[];return this.iterate((t=>(e.push(t),!0))),e}filter(e){return new i((t=>this.iterate((n=>!e(n)||t(n)))))}map(e){return new i((t=>this.iterate((n=>t(e(n))))))}some(e){let t=!1;return this.iterate((n=>(t=e(n),!t))),t}findFirst(e){let t;return this.iterate((n=>!e(n)||(t=n,!1))),t}findLast(e){let t;return this.iterate((n=>(e(n)&&(t=n),!0))),t}findLastMaxBy(e){let t,i=!0;return this.iterate((r=>((i||n.isGreaterThan(e(r,t)))&&(i=!1,t=r),!0))),t}}t.CallbackIterable=i,i.empty=new i((e=>{}))},113:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checkAdjacentItems=t.assertFn=void 0;const i=n(190);t.assertFn=function(e){e()||(e(),(0,i.onUnexpectedError)(new i.BugIndicatingError("Assertion Failed")))},t.checkAdjacentItems=function(e,t){let n=0;for(;n<e.length-1;){if(!t(e[n],e[n+1]))return!1;n++}return!0}},888:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SetMap=void 0,t.SetMap=class{constructor(){this.map=new Map}add(e,t){let n=this.map.get(e);n||(n=new Set,this.map.set(e,n)),n.add(t)}delete(e,t){const n=this.map.get(e);n&&(n.delete(t),0===n.size&&this.map.delete(e))}forEach(e,t){const n=this.map.get(e);n&&n.forEach(t)}get(e){return this.map.get(e)||new Set}}},197:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LcsDiff=t.stringDiff=t.StringDiffSequence=void 0;const i=n(434),r=n(969);class s{constructor(e){this.source=e}getElements(){const e=this.source,t=new Int32Array(e.length);for(let n=0,i=e.length;n<i;n++)t[n]=e.charCodeAt(n);return t}}t.StringDiffSequence=s,t.stringDiff=function(e,t,n){return new l(new s(e),new s(t)).ComputeDiff(n).changes};class a{static Assert(e,t){if(!e)throw new Error(t)}}class o{static Copy(e,t,n,i,r){for(let s=0;s<r;s++)n[i+s]=e[t+s]}static Copy2(e,t,n,i,r){for(let s=0;s<r;s++)n[i+s]=e[t+s]}}class u{constructor(){this.m_changes=[],this.m_originalStart=1073741824,this.m_modifiedStart=1073741824,this.m_originalCount=0,this.m_modifiedCount=0}MarkNextChange(){(this.m_originalCount>0||this.m_modifiedCount>0)&&this.m_changes.push(new r.DiffChange(this.m_originalStart,this.m_originalCount,this.m_modifiedStart,this.m_modifiedCount)),this.m_originalCount=0,this.m_modifiedCount=0,this.m_originalStart=1073741824,this.m_modifiedStart=1073741824}AddOriginalElement(e,t){this.m_originalStart=Math.min(this.m_originalStart,e),this.m_modifiedStart=Math.min(this.m_modifiedStart,t),this.m_originalCount++}AddModifiedElement(e,t){this.m_originalStart=Math.min(this.m_originalStart,e),this.m_modifiedStart=Math.min(this.m_modifiedStart,t),this.m_modifiedCount++}getChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes}getReverseChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes.reverse(),this.m_changes}}class l{constructor(e,t,n=null){this.ContinueProcessingPredicate=n,this._originalSequence=e,this._modifiedSequence=t;const[i,r,s]=l._getElements(e),[a,o,u]=l._getElements(t);this._hasStrings=s&&u,this._originalStringElements=i,this._originalElementsOrHash=r,this._modifiedStringElements=a,this._modifiedElementsOrHash=o,this.m_forwardHistory=[],this.m_reverseHistory=[]}static _isStringArray(e){return e.length>0&&"string"==typeof e[0]}static _getElements(e){const t=e.getElements();if(l._isStringArray(t)){const e=new Int32Array(t.length);for(let n=0,r=t.length;n<r;n++)e[n]=(0,i.stringHash)(t[n],0);return[t,e,!0]}return t instanceof Int32Array?[[],t,!1]:[[],new Int32Array(t),!1]}ElementsAreEqual(e,t){return this._originalElementsOrHash[e]===this._modifiedElementsOrHash[t]&&(!this._hasStrings||this._originalStringElements[e]===this._modifiedStringElements[t])}ElementsAreStrictEqual(e,t){return!!this.ElementsAreEqual(e,t)&&l._getStrictElement(this._originalSequence,e)===l._getStrictElement(this._modifiedSequence,t)}static _getStrictElement(e,t){return"function"==typeof e.getStrictElement?e.getStrictElement(t):null}OriginalElementsAreEqual(e,t){return this._originalElementsOrHash[e]===this._originalElementsOrHash[t]&&(!this._hasStrings||this._originalStringElements[e]===this._originalStringElements[t])}ModifiedElementsAreEqual(e,t){return this._modifiedElementsOrHash[e]===this._modifiedElementsOrHash[t]&&(!this._hasStrings||this._modifiedStringElements[e]===this._modifiedStringElements[t])}ComputeDiff(e){return this._ComputeDiff(0,this._originalElementsOrHash.length-1,0,this._modifiedElementsOrHash.length-1,e)}_ComputeDiff(e,t,n,i,r){const s=[!1];let a=this.ComputeDiffRecursive(e,t,n,i,s);return r&&(a=this.PrettifyChanges(a)),{quitEarly:s[0],changes:a}}ComputeDiffRecursive(e,t,n,i,s){for(s[0]=!1;e<=t&&n<=i&&this.ElementsAreEqual(e,n);)e++,n++;for(;t>=e&&i>=n&&this.ElementsAreEqual(t,i);)t--,i--;if(e>t||n>i){let s;return n<=i?(a.Assert(e===t+1,"originalStart should only be one more than originalEnd"),s=[new r.DiffChange(e,0,n,i-n+1)]):e<=t?(a.Assert(n===i+1,"modifiedStart should only be one more than modifiedEnd"),s=[new r.DiffChange(e,t-e+1,n,0)]):(a.Assert(e===t+1,"originalStart should only be one more than originalEnd"),a.Assert(n===i+1,"modifiedStart should only be one more than modifiedEnd"),s=[]),s}const o=[0],u=[0],l=this.ComputeRecursionPoint(e,t,n,i,o,u,s),h=o[0],g=u[0];if(null!==l)return l;if(!s[0]){const a=this.ComputeDiffRecursive(e,h,n,g,s);let o=[];return o=s[0]?[new r.DiffChange(h+1,t-(h+1)+1,g+1,i-(g+1)+1)]:this.ComputeDiffRecursive(h+1,t,g+1,i,s),this.ConcatenateChanges(a,o)}return[new r.DiffChange(e,t-e+1,n,i-n+1)]}WALKTRACE(e,t,n,i,s,a,o,l,h,g,m,d,c,f,L,b,R,p){let E=null,N=null,C=new u,_=t,v=n,S=c[0]-b[0]-i,w=-1073741824,x=this.m_forwardHistory.length-1;do{const t=S+e;t===_||t<v&&h[t-1]<h[t+1]?(f=(m=h[t+1])-S-i,m<w&&C.MarkNextChange(),w=m,C.AddModifiedElement(m+1,f),S=t+1-e):(f=(m=h[t-1]+1)-S-i,m<w&&C.MarkNextChange(),w=m-1,C.AddOriginalElement(m,f+1),S=t-1-e),x>=0&&(e=(h=this.m_forwardHistory[x])[0],_=1,v=h.length-1)}while(--x>=-1);if(E=C.getReverseChanges(),p[0]){let e=c[0]+1,t=b[0]+1;if(null!==E&&E.length>0){const n=E[E.length-1];e=Math.max(e,n.getOriginalEnd()),t=Math.max(t,n.getModifiedEnd())}N=[new r.DiffChange(e,d-e+1,t,L-t+1)]}else{C=new u,_=a,v=o,S=c[0]-b[0]-l,w=1073741824,x=R?this.m_reverseHistory.length-1:this.m_reverseHistory.length-2;do{const e=S+s;e===_||e<v&&g[e-1]>=g[e+1]?(f=(m=g[e+1]-1)-S-l,m>w&&C.MarkNextChange(),w=m+1,C.AddOriginalElement(m+1,f+1),S=e+1-s):(f=(m=g[e-1])-S-l,m>w&&C.MarkNextChange(),w=m,C.AddModifiedElement(m+1,f+1),S=e-1-s),x>=0&&(s=(g=this.m_reverseHistory[x])[0],_=1,v=g.length-1)}while(--x>=-1);N=C.getChanges()}return this.ConcatenateChanges(E,N)}ComputeRecursionPoint(e,t,n,i,s,a,u){let l=0,h=0,g=0,m=0,d=0,c=0;e--,n--,s[0]=0,a[0]=0,this.m_forwardHistory=[],this.m_reverseHistory=[];const f=t-e+(i-n),L=f+1,b=new Int32Array(L),R=new Int32Array(L),p=i-n,E=t-e,N=e-n,C=t-i,_=(E-p)%2==0;b[p]=e,R[E]=t,u[0]=!1;for(let v=1;v<=f/2+1;v++){let f=0,S=0;g=this.ClipDiagonalBound(p-v,v,p,L),m=this.ClipDiagonalBound(p+v,v,p,L);for(let e=g;e<=m;e+=2){l=e===g||e<m&&b[e-1]<b[e+1]?b[e+1]:b[e-1]+1,h=l-(e-p)-N;const n=l;for(;l<t&&h<i&&this.ElementsAreEqual(l+1,h+1);)l++,h++;if(b[e]=l,l+h>f+S&&(f=l,S=h),!_&&Math.abs(e-E)<=v-1&&l>=R[e])return s[0]=l,a[0]=h,n<=R[e]&&v<=1448?this.WALKTRACE(p,g,m,N,E,d,c,C,b,R,l,t,s,h,i,a,_,u):null}const w=(f-e+(S-n)-v)/2;if(null!==this.ContinueProcessingPredicate&&!this.ContinueProcessingPredicate(f,w))return u[0]=!0,s[0]=f,a[0]=S,w>0&&v<=1448?this.WALKTRACE(p,g,m,N,E,d,c,C,b,R,l,t,s,h,i,a,_,u):(e++,n++,[new r.DiffChange(e,t-e+1,n,i-n+1)]);d=this.ClipDiagonalBound(E-v,v,E,L),c=this.ClipDiagonalBound(E+v,v,E,L);for(let r=d;r<=c;r+=2){l=r===d||r<c&&R[r-1]>=R[r+1]?R[r+1]-1:R[r-1],h=l-(r-E)-C;const o=l;for(;l>e&&h>n&&this.ElementsAreEqual(l,h);)l--,h--;if(R[r]=l,_&&Math.abs(r-p)<=v&&l<=b[r])return s[0]=l,a[0]=h,o>=b[r]&&v<=1448?this.WALKTRACE(p,g,m,N,E,d,c,C,b,R,l,t,s,h,i,a,_,u):null}if(v<=1447){let e=new Int32Array(m-g+2);e[0]=p-g+1,o.Copy2(b,g,e,1,m-g+1),this.m_forwardHistory.push(e),e=new Int32Array(c-d+2),e[0]=E-d+1,o.Copy2(R,d,e,1,c-d+1),this.m_reverseHistory.push(e)}}return this.WALKTRACE(p,g,m,N,E,d,c,C,b,R,l,t,s,h,i,a,_,u)}PrettifyChanges(e){for(let t=0;t<e.length;t++){const n=e[t],i=t<e.length-1?e[t+1].originalStart:this._originalElementsOrHash.length,r=t<e.length-1?e[t+1].modifiedStart:this._modifiedElementsOrHash.length,s=n.originalLength>0,a=n.modifiedLength>0;for(;n.originalStart+n.originalLength<i&&n.modifiedStart+n.modifiedLength<r&&(!s||this.OriginalElementsAreEqual(n.originalStart,n.originalStart+n.originalLength))&&(!a||this.ModifiedElementsAreEqual(n.modifiedStart,n.modifiedStart+n.modifiedLength));){const e=this.ElementsAreStrictEqual(n.originalStart,n.modifiedStart);if(this.ElementsAreStrictEqual(n.originalStart+n.originalLength,n.modifiedStart+n.modifiedLength)&&!e)break;n.originalStart++,n.modifiedStart++}const o=[null];t<e.length-1&&this.ChangesOverlap(e[t],e[t+1],o)&&(e[t]=o[0],e.splice(t+1,1),t--)}for(let t=e.length-1;t>=0;t--){const n=e[t];let i=0,r=0;if(t>0){const n=e[t-1];i=n.originalStart+n.originalLength,r=n.modifiedStart+n.modifiedLength}const s=n.originalLength>0,a=n.modifiedLength>0;let o=0,u=this._boundaryScore(n.originalStart,n.originalLength,n.modifiedStart,n.modifiedLength);for(let e=1;;e++){const t=n.originalStart-e,l=n.modifiedStart-e;if(t<i||l<r)break;if(s&&!this.OriginalElementsAreEqual(t,t+n.originalLength))break;if(a&&!this.ModifiedElementsAreEqual(l,l+n.modifiedLength))break;const h=(t===i&&l===r?5:0)+this._boundaryScore(t,n.originalLength,l,n.modifiedLength);h>u&&(u=h,o=e)}n.originalStart-=o,n.modifiedStart-=o;const l=[null];t>0&&this.ChangesOverlap(e[t-1],e[t],l)&&(e[t-1]=l[0],e.splice(t,1),t++)}if(this._hasStrings)for(let t=1,n=e.length;t<n;t++){const n=e[t-1],i=e[t],r=i.originalStart-n.originalStart-n.originalLength,s=n.originalStart,a=i.originalStart+i.originalLength,o=a-s,u=n.modifiedStart,l=i.modifiedStart+i.modifiedLength,h=l-u;if(r<5&&o<20&&h<20){const e=this._findBetterContiguousSequence(s,o,u,h,r);if(e){const[t,s]=e;t===n.originalStart+n.originalLength&&s===n.modifiedStart+n.modifiedLength||(n.originalLength=t-n.originalStart,n.modifiedLength=s-n.modifiedStart,i.originalStart=t+r,i.modifiedStart=s+r,i.originalLength=a-i.originalStart,i.modifiedLength=l-i.modifiedStart)}}}return e}_findBetterContiguousSequence(e,t,n,i,r){if(t<r||i<r)return null;const s=e+t-r+1,a=n+i-r+1;let o=0,u=0,l=0;for(let t=e;t<s;t++)for(let e=n;e<a;e++){const n=this._contiguousSequenceScore(t,e,r);n>0&&n>o&&(o=n,u=t,l=e)}return o>0?[u,l]:null}_contiguousSequenceScore(e,t,n){let i=0;for(let r=0;r<n;r++){if(!this.ElementsAreEqual(e+r,t+r))return 0;i+=this._originalStringElements[e+r].length}return i}_OriginalIsBoundary(e){return e<=0||e>=this._originalElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._originalStringElements[e])}_OriginalRegionIsBoundary(e,t){if(this._OriginalIsBoundary(e)||this._OriginalIsBoundary(e-1))return!0;if(t>0){const n=e+t;if(this._OriginalIsBoundary(n-1)||this._OriginalIsBoundary(n))return!0}return!1}_ModifiedIsBoundary(e){return e<=0||e>=this._modifiedElementsOrHash.length-1||this._hasStrings&&/^\s*$/.test(this._modifiedStringElements[e])}_ModifiedRegionIsBoundary(e,t){if(this._ModifiedIsBoundary(e)||this._ModifiedIsBoundary(e-1))return!0;if(t>0){const n=e+t;if(this._ModifiedIsBoundary(n-1)||this._ModifiedIsBoundary(n))return!0}return!1}_boundaryScore(e,t,n,i){return(this._OriginalRegionIsBoundary(e,t)?1:0)+(this._ModifiedRegionIsBoundary(n,i)?1:0)}ConcatenateChanges(e,t){const n=[];if(0===e.length||0===t.length)return t.length>0?t:e;if(this.ChangesOverlap(e[e.length-1],t[0],n)){const i=new Array(e.length+t.length-1);return o.Copy(e,0,i,0,e.length-1),i[e.length-1]=n[0],o.Copy(t,1,i,e.length,t.length-1),i}{const n=new Array(e.length+t.length);return o.Copy(e,0,n,0,e.length),o.Copy(t,0,n,e.length,t.length),n}}ChangesOverlap(e,t,n){if(a.Assert(e.originalStart<=t.originalStart,"Left change is not less than or equal to right change"),a.Assert(e.modifiedStart<=t.modifiedStart,"Left change is not less than or equal to right change"),e.originalStart+e.originalLength>=t.originalStart||e.modifiedStart+e.modifiedLength>=t.modifiedStart){const i=e.originalStart;let s=e.originalLength;const a=e.modifiedStart;let o=e.modifiedLength;return e.originalStart+e.originalLength>=t.originalStart&&(s=t.originalStart+t.originalLength-e.originalStart),e.modifiedStart+e.modifiedLength>=t.modifiedStart&&(o=t.modifiedStart+t.modifiedLength-e.modifiedStart),n[0]=new r.DiffChange(i,s,a,o),!0}return n[0]=null,!1}ClipDiagonalBound(e,t,n,i){if(e>=0&&e<i)return e;const r=t%2==0;return e<0?r===(n%2==0)?0:1:r===((i-n-1)%2==0)?i-1:i-2}}t.LcsDiff=l},969:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DiffChange=void 0,t.DiffChange=class{constructor(e,t,n,i){this.originalStart=e,this.originalLength=t,this.modifiedStart=n,this.modifiedLength=i}getOriginalEnd(){return this.originalStart+this.originalLength}getModifiedEnd(){return this.modifiedStart+this.modifiedLength}}},190:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BugIndicatingError=t.ErrorNoTelemetry=t.CancellationError=t.isCancellationError=t.onUnexpectedError=t.errorHandler=t.ErrorHandler=void 0;class n{constructor(){this.listeners=[],this.unexpectedErrorHandler=function(e){setTimeout((()=>{if(e.stack){if(a.isErrorNoTelemetry(e))throw new a(e.message+"\n\n"+e.stack);throw new Error(e.message+"\n\n"+e.stack)}throw e}),0)}}addListener(e){return this.listeners.push(e),()=>{this._removeListener(e)}}emit(e){this.listeners.forEach((t=>{t(e)}))}_removeListener(e){this.listeners.splice(this.listeners.indexOf(e),1)}setUnexpectedErrorHandler(e){this.unexpectedErrorHandler=e}getUnexpectedErrorHandler(){return this.unexpectedErrorHandler}onUnexpectedError(e){this.unexpectedErrorHandler(e),this.emit(e)}onUnexpectedExternalError(e){this.unexpectedErrorHandler(e)}}t.ErrorHandler=n,t.errorHandler=new n,t.onUnexpectedError=function(e){r(e)||t.errorHandler.onUnexpectedError(e)};const i="Canceled";function r(e){return e instanceof s||e instanceof Error&&e.name===i&&e.message===i}t.isCancellationError=r;class s extends Error{constructor(){super(i),this.name=this.message}}t.CancellationError=s;class a extends Error{constructor(e){super(e),this.name="CodeExpectedError"}static fromError(e){if(e instanceof a)return e;const t=new a;return t.message=e.message,t.stack=e.stack,t}static isErrorNoTelemetry(e){return"CodeExpectedError"===e.name}}t.ErrorNoTelemetry=a;class o extends Error{constructor(e){super(e||"An unexpected bug occurred."),Object.setPrototypeOf(this,o.prototype)}}t.BugIndicatingError=o},434:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StringSHA1=t.toHexString=t.stringHash=t.numberHash=t.doHash=void 0;const i=n(734);function r(e,t){return(t<<5)-t+e|0}function s(e,t){t=r(149417,t);for(let n=0,i=e.length;n<i;n++)t=r(e.charCodeAt(n),t);return t}function a(e,t,n=32){const i=n-t;return(e<<t|(~((1<<i)-1)&e)>>>i)>>>0}function o(e,t=0,n=e.byteLength,i=0){for(let r=0;r<n;r++)e[t+r]=i}function u(e,t=32){return e instanceof ArrayBuffer?Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join(""):function(e,t,n="0"){for(;e.length<t;)e=n+e;return e}((e>>>0).toString(16),t/4)}t.doHash=function e(t,n){switch(typeof t){case"object":return null===t?r(349,n):Array.isArray(t)?(i=t,a=r(104579,a=n),i.reduce(((t,n)=>e(n,t)),a)):function(t,n){return n=r(181387,n),Object.keys(t).sort().reduce(((n,i)=>(n=s(i,n),e(t[i],n))),n)}(t,n);case"string":return s(t,n);case"boolean":return function(e,t){return r(e?433:863,t)}(t,n);case"number":return r(t,n);case"undefined":return r(937,n);default:return r(617,n)}var i,a},t.numberHash=r,t.stringHash=s,t.toHexString=u;class l{constructor(){this._h0=1732584193,this._h1=4023233417,this._h2=2562383102,this._h3=271733878,this._h4=3285377520,this._buff=new Uint8Array(67),this._buffDV=new DataView(this._buff.buffer),this._buffLen=0,this._totalLen=0,this._leftoverHighSurrogate=0,this._finished=!1}update(e){const t=e.length;if(0===t)return;const n=this._buff;let r,s,a=this._buffLen,o=this._leftoverHighSurrogate;for(0!==o?(r=o,s=-1,o=0):(r=e.charCodeAt(0),s=0);;){let u=r;if(i.isHighSurrogate(r)){if(!(s+1<t)){o=r;break}{const t=e.charCodeAt(s+1);i.isLowSurrogate(t)?(s++,u=i.computeCodePoint(r,t)):u=65533}}else i.isLowSurrogate(r)&&(u=65533);if(a=this._push(n,a,u),s++,!(s<t))break;r=e.charCodeAt(s)}this._buffLen=a,this._leftoverHighSurrogate=o}_push(e,t,n){return n<128?e[t++]=n:n<2048?(e[t++]=192|(1984&n)>>>6,e[t++]=128|(63&n)>>>0):n<65536?(e[t++]=224|(61440&n)>>>12,e[t++]=128|(4032&n)>>>6,e[t++]=128|(63&n)>>>0):(e[t++]=240|(1835008&n)>>>18,e[t++]=128|(258048&n)>>>12,e[t++]=128|(4032&n)>>>6,e[t++]=128|(63&n)>>>0),t>=64&&(this._step(),t-=64,this._totalLen+=64,e[0]=e[64],e[1]=e[65],e[2]=e[66]),t}digest(){return this._finished||(this._finished=!0,this._leftoverHighSurrogate&&(this._leftoverHighSurrogate=0,this._buffLen=this._push(this._buff,this._buffLen,65533)),this._totalLen+=this._buffLen,this._wrapUp()),u(this._h0)+u(this._h1)+u(this._h2)+u(this._h3)+u(this._h4)}_wrapUp(){this._buff[this._buffLen++]=128,o(this._buff,this._buffLen),this._buffLen>56&&(this._step(),o(this._buff));const e=8*this._totalLen;this._buffDV.setUint32(56,Math.floor(e/4294967296),!1),this._buffDV.setUint32(60,e%4294967296,!1),this._step()}_step(){const e=l._bigBlock32,t=this._buffDV;for(let n=0;n<64;n+=4)e.setUint32(n,t.getUint32(n,!1),!1);for(let t=64;t<320;t+=4)e.setUint32(t,a(e.getUint32(t-12,!1)^e.getUint32(t-32,!1)^e.getUint32(t-56,!1)^e.getUint32(t-64,!1),1),!1);let n,i,r,s=this._h0,o=this._h1,u=this._h2,h=this._h3,g=this._h4;for(let t=0;t<80;t++)t<20?(n=o&u|~o&h,i=1518500249):t<40?(n=o^u^h,i=1859775393):t<60?(n=o&u|o&h|u&h,i=2400959708):(n=o^u^h,i=3395469782),r=a(s,5)+n+g+i+e.getUint32(4*t,!1)&4294967295,g=h,h=u,u=a(o,30),o=s,s=r;this._h0=this._h0+s&4294967295,this._h1=this._h1+o&4294967295,this._h2=this._h2+u&4294967295,this._h3=this._h3+h&4294967295,this._h4=this._h4+g&4294967295}}t.StringSHA1=l,l._bigBlock32=new DataView(new ArrayBuffer(320))},734:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.computeCodePoint=t.isLowSurrogate=t.isHighSurrogate=t.lastNonWhitespaceIndex=t.firstNonWhitespaceIndex=void 0,t.firstNonWhitespaceIndex=function(e){for(let t=0,n=e.length;t<n;t++){const n=e.charCodeAt(t);if(32!==n&&9!==n)return t}return-1},t.lastNonWhitespaceIndex=function(e,t=e.length-1){for(let n=t;n>=0;n--){const t=e.charCodeAt(n);if(32!==t&&9!==t)return n}return-1},t.isHighSurrogate=function(e){return 55296<=e&&e<=56319},t.isLowSurrogate=function(e){return 56320<=e&&e<=57343},t.computeCodePoint=function(e,t){return t-56320+(e-55296<<10)+65536}},638:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LineRange=void 0;const i=n(190),r=n(314),s=n(541);class a{static fromRange(e){return new a(e.startLineNumber,e.endLineNumber)}static subtract(e,t){return t?e.startLineNumber<t.startLineNumber&&t.endLineNumberExclusive<e.endLineNumberExclusive?[new a(e.startLineNumber,t.startLineNumber),new a(t.endLineNumberExclusive,e.endLineNumberExclusive)]:t.startLineNumber<=e.startLineNumber&&e.endLineNumberExclusive<=t.endLineNumberExclusive?[]:t.endLineNumberExclusive<e.endLineNumberExclusive?[new a(Math.max(t.endLineNumberExclusive,e.startLineNumber),e.endLineNumberExclusive)]:[new a(e.startLineNumber,Math.min(t.startLineNumber,e.endLineNumberExclusive))]:[e]}static joinMany(e){if(0===e.length)return[];let t=e[0];for(let n=1;n<e.length;n++)t=this.join(t,e[n]);return t}static join(e,t){if(0===e.length)return t;if(0===t.length)return e;const n=[];let i=0,r=0,s=null;for(;i<e.length||r<t.length;){let o=null;if(i<e.length&&r<t.length){const n=e[i],s=t[r];n.startLineNumber<s.startLineNumber?(o=n,i++):(o=s,r++)}else i<e.length?(o=e[i],i++):(o=t[r],r++);null===s?s=o:s.endLineNumberExclusive>=o.startLineNumber?s=new a(s.startLineNumber,Math.max(s.endLineNumberExclusive,o.endLineNumberExclusive)):(n.push(s),s=o)}return null!==s&&n.push(s),n}static ofLength(e,t){return new a(e,e+t)}static deserialize(e){return new a(e[0],e[1])}constructor(e,t){if(e>t)throw new i.BugIndicatingError(`startLineNumber ${e} cannot be after endLineNumberExclusive ${t}`);this.startLineNumber=e,this.endLineNumberExclusive=t}contains(e){return this.startLineNumber<=e&&e<this.endLineNumberExclusive}get isEmpty(){return this.startLineNumber===this.endLineNumberExclusive}delta(e){return new a(this.startLineNumber+e,this.endLineNumberExclusive+e)}deltaLength(e){return new a(this.startLineNumber,this.endLineNumberExclusive+e)}get length(){return this.endLineNumberExclusive-this.startLineNumber}join(e){return new a(Math.min(this.startLineNumber,e.startLineNumber),Math.max(this.endLineNumberExclusive,e.endLineNumberExclusive))}toString(){return`[${this.startLineNumber},${this.endLineNumberExclusive})`}intersect(e){const t=Math.max(this.startLineNumber,e.startLineNumber),n=Math.min(this.endLineNumberExclusive,e.endLineNumberExclusive);if(t<=n)return new a(t,n)}intersectsStrict(e){return this.startLineNumber<e.endLineNumberExclusive&&e.startLineNumber<this.endLineNumberExclusive}overlapOrTouch(e){return this.startLineNumber<=e.endLineNumberExclusive&&e.startLineNumber<=this.endLineNumberExclusive}equals(e){return this.startLineNumber===e.startLineNumber&&this.endLineNumberExclusive===e.endLineNumberExclusive}toInclusiveRange(){return this.isEmpty?null:new s.Range(this.startLineNumber,1,this.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER)}toExclusiveRange(){return new s.Range(this.startLineNumber,1,this.endLineNumberExclusive,1)}mapToLineArray(e){const t=[];for(let n=this.startLineNumber;n<this.endLineNumberExclusive;n++)t.push(e(n));return t}forEach(e){for(let t=this.startLineNumber;t<this.endLineNumberExclusive;t++)e(t)}serialize(){return[this.startLineNumber,this.endLineNumberExclusive]}includes(e){return this.startLineNumber<=e&&e<this.endLineNumberExclusive}toOffsetRange(){return new r.OffsetRange(this.startLineNumber-1,this.endLineNumberExclusive-1)}}t.LineRange=a},314:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OffsetRangeSet=t.OffsetRange=void 0;const i=n(190);class r{static addRange(e,t){let n=0;for(;n<t.length&&t[n].endExclusive<e.start;)n++;let i=n;for(;i<t.length&&t[i].start<=e.endExclusive;)i++;if(n===i)t.splice(n,0,e);else{const s=Math.min(e.start,t[n].start),a=Math.max(e.endExclusive,t[i-1].endExclusive);t.splice(n,i-n,new r(s,a))}}static tryCreate(e,t){if(!(e>t))return new r(e,t)}static ofLength(e){return new r(0,e)}constructor(e,t){if(this.start=e,this.endExclusive=t,e>t)throw new i.BugIndicatingError(`Invalid range: ${this.toString()}`)}get isEmpty(){return this.start===this.endExclusive}delta(e){return new r(this.start+e,this.endExclusive+e)}deltaStart(e){return new r(this.start+e,this.endExclusive)}deltaEnd(e){return new r(this.start,this.endExclusive+e)}get length(){return this.endExclusive-this.start}toString(){return`[${this.start}, ${this.endExclusive})`}equals(e){return this.start===e.start&&this.endExclusive===e.endExclusive}containsRange(e){return this.start<=e.start&&e.endExclusive<=this.endExclusive}contains(e){return this.start<=e&&e<this.endExclusive}join(e){return new r(Math.min(this.start,e.start),Math.max(this.endExclusive,e.endExclusive))}intersect(e){const t=Math.max(this.start,e.start),n=Math.min(this.endExclusive,e.endExclusive);if(t<=n)return new r(t,n)}slice(e){return e.slice(this.start,this.endExclusive)}clip(e){if(this.isEmpty)throw new i.BugIndicatingError(`Invalid clipping range: ${this.toString()}`);return Math.max(this.start,Math.min(this.endExclusive-1,e))}clipCyclic(e){if(this.isEmpty)throw new i.BugIndicatingError(`Invalid clipping range: ${this.toString()}`);return e<this.start?this.endExclusive-(this.start-e)%this.length:e>=this.endExclusive?this.start+(e-this.start)%this.length:e}}t.OffsetRange=r;class s{constructor(){this._sortedRanges=[]}addRange(e){let t=0;for(;t<this._sortedRanges.length&&this._sortedRanges[t].endExclusive<e.start;)t++;let n=t;for(;n<this._sortedRanges.length&&this._sortedRanges[n].start<=e.endExclusive;)n++;if(t===n)this._sortedRanges.splice(t,0,e);else{const i=Math.min(e.start,this._sortedRanges[t].start),s=Math.max(e.endExclusive,this._sortedRanges[n-1].endExclusive);this._sortedRanges.splice(t,n-t,new r(i,s))}}toString(){return this._sortedRanges.map((e=>e.toString())).join(", ")}intersectsStrict(e){let t=0;for(;t<this._sortedRanges.length&&this._sortedRanges[t].endExclusive<=e.start;)t++;return t<this._sortedRanges.length&&this._sortedRanges[t].start<e.endExclusive}intersectWithRange(e){const t=new s;for(const n of this._sortedRanges){const i=n.intersect(e);i&&t.addRange(i)}return t}intersectWithRangeLength(e){return this.intersectWithRange(e).length}get length(){return this._sortedRanges.reduce(((e,t)=>e+t.length),0)}}t.OffsetRangeSet=s},373:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Position=void 0;class n{constructor(e,t){this.lineNumber=e,this.column=t}with(e=this.lineNumber,t=this.column){return e===this.lineNumber&&t===this.column?this:new n(e,t)}delta(e=0,t=0){return this.with(this.lineNumber+e,this.column+t)}equals(e){return n.equals(this,e)}static equals(e,t){return!e&&!t||!!e&&!!t&&e.lineNumber===t.lineNumber&&e.column===t.column}isBefore(e){return n.isBefore(this,e)}static isBefore(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<t.column}isBeforeOrEqual(e){return n.isBeforeOrEqual(this,e)}static isBeforeOrEqual(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<=t.column}static compare(e,t){const n=0|e.lineNumber,i=0|t.lineNumber;return n===i?(0|e.column)-(0|t.column):n-i}clone(){return new n(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(e){return new n(e.lineNumber,e.column)}static isIPosition(e){return e&&"number"==typeof e.lineNumber&&"number"==typeof e.column}}t.Position=n},541:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Range=void 0;const i=n(373);class r{constructor(e,t,n,i){e>n||e===n&&t>i?(this.startLineNumber=n,this.startColumn=i,this.endLineNumber=e,this.endColumn=t):(this.startLineNumber=e,this.startColumn=t,this.endLineNumber=n,this.endColumn=i)}isEmpty(){return r.isEmpty(this)}static isEmpty(e){return e.startLineNumber===e.endLineNumber&&e.startColumn===e.endColumn}containsPosition(e){return r.containsPosition(this,e)}static containsPosition(e,t){return!(t.lineNumber<e.startLineNumber||t.lineNumber>e.endLineNumber||t.lineNumber===e.startLineNumber&&t.column<e.startColumn||t.lineNumber===e.endLineNumber&&t.column>e.endColumn)}static strictContainsPosition(e,t){return!(t.lineNumber<e.startLineNumber||t.lineNumber>e.endLineNumber||t.lineNumber===e.startLineNumber&&t.column<=e.startColumn||t.lineNumber===e.endLineNumber&&t.column>=e.endColumn)}containsRange(e){return r.containsRange(this,e)}static containsRange(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber||t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber||t.startLineNumber===e.startLineNumber&&t.startColumn<e.startColumn||t.endLineNumber===e.endLineNumber&&t.endColumn>e.endColumn)}strictContainsRange(e){return r.strictContainsRange(this,e)}static strictContainsRange(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber||t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber||t.startLineNumber===e.startLineNumber&&t.startColumn<=e.startColumn||t.endLineNumber===e.endLineNumber&&t.endColumn>=e.endColumn)}plusRange(e){return r.plusRange(this,e)}static plusRange(e,t){let n,i,s,a;return t.startLineNumber<e.startLineNumber?(n=t.startLineNumber,i=t.startColumn):t.startLineNumber===e.startLineNumber?(n=t.startLineNumber,i=Math.min(t.startColumn,e.startColumn)):(n=e.startLineNumber,i=e.startColumn),t.endLineNumber>e.endLineNumber?(s=t.endLineNumber,a=t.endColumn):t.endLineNumber===e.endLineNumber?(s=t.endLineNumber,a=Math.max(t.endColumn,e.endColumn)):(s=e.endLineNumber,a=e.endColumn),new r(n,i,s,a)}intersectRanges(e){return r.intersectRanges(this,e)}static intersectRanges(e,t){let n=e.startLineNumber,i=e.startColumn,s=e.endLineNumber,a=e.endColumn;const o=t.startLineNumber,u=t.startColumn,l=t.endLineNumber,h=t.endColumn;return n<o?(n=o,i=u):n===o&&(i=Math.max(i,u)),s>l?(s=l,a=h):s===l&&(a=Math.min(a,h)),n>s||n===s&&i>a?null:new r(n,i,s,a)}equalsRange(e){return r.equalsRange(this,e)}static equalsRange(e,t){return!e&&!t||!!e&&!!t&&e.startLineNumber===t.startLineNumber&&e.startColumn===t.startColumn&&e.endLineNumber===t.endLineNumber&&e.endColumn===t.endColumn}getEndPosition(){return r.getEndPosition(this)}static getEndPosition(e){return new i.Position(e.endLineNumber,e.endColumn)}getStartPosition(){return r.getStartPosition(this)}static getStartPosition(e){return new i.Position(e.startLineNumber,e.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(e,t){return new r(this.startLineNumber,this.startColumn,e,t)}setStartPosition(e,t){return new r(e,t,this.endLineNumber,this.endColumn)}collapseToStart(){return r.collapseToStart(this)}static collapseToStart(e){return new r(e.startLineNumber,e.startColumn,e.startLineNumber,e.startColumn)}collapseToEnd(){return r.collapseToEnd(this)}static collapseToEnd(e){return new r(e.endLineNumber,e.endColumn,e.endLineNumber,e.endColumn)}delta(e){return new r(this.startLineNumber+e,this.startColumn,this.endLineNumber+e,this.endColumn)}static fromPositions(e,t=e){return new r(e.lineNumber,e.column,t.lineNumber,t.column)}static lift(e){return e?new r(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn):null}static isIRange(e){return e&&"number"==typeof e.startLineNumber&&"number"==typeof e.startColumn&&"number"==typeof e.endLineNumber&&"number"==typeof e.endColumn}static areIntersectingOrTouching(e,t){return!(e.endLineNumber<t.startLineNumber||e.endLineNumber===t.startLineNumber&&e.endColumn<t.startColumn||t.endLineNumber<e.startLineNumber||t.endLineNumber===e.startLineNumber&&t.endColumn<e.startColumn)}static areIntersecting(e,t){return!(e.endLineNumber<t.startLineNumber||e.endLineNumber===t.startLineNumber&&e.endColumn<=t.startColumn||t.endLineNumber<e.startLineNumber||t.endLineNumber===e.startLineNumber&&t.endColumn<=e.startColumn)}static compareRangesUsingStarts(e,t){if(e&&t){const n=0|e.startLineNumber,i=0|t.startLineNumber;if(n===i){const n=0|e.startColumn,i=0|t.startColumn;if(n===i){const n=0|e.endLineNumber,i=0|t.endLineNumber;return n===i?(0|e.endColumn)-(0|t.endColumn):n-i}return n-i}return n-i}return(e?1:0)-(t?1:0)}static compareRangesUsingEnds(e,t){return e.endLineNumber===t.endLineNumber?e.endColumn===t.endColumn?e.startLineNumber===t.startLineNumber?e.startColumn-t.startColumn:e.startLineNumber-t.startLineNumber:e.endColumn-t.endColumn:e.endLineNumber-t.endLineNumber}static spansMultipleLines(e){return e.endLineNumber>e.startLineNumber}toJSON(){return this}}t.Range=r},198:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.findFirstMonotonous=t.findLastMonotonous=t.LinesSliceCharSequence=t.LineSequence=t.getLineRangeMapping=t.lineRangeMappingFromRangeMappings=t.AdvancedLinesDiffComputer=void 0;const i=n(177),r=n(113),s=n(888),a=n(190),o=n(638),u=n(314),l=n(373),h=n(541),g=n(311),m=n(63),d=n(890),c=n(92),f=n(420);t.AdvancedLinesDiffComputer=class{constructor(){this.dynamicProgrammingDiffing=new m.DynamicProgrammingDiffing,this.myersDiffingAlgorithm=new c.MyersDiffAlgorithm}computeDiff(e,t,n){if(e.length<=1&&(0,i.equals)(e,t,((e,t)=>e===t)))return new f.LinesDiff([],[],!1);if(1===e.length&&0===e[0].length||1===t.length&&0===t[0].length)return new f.LinesDiff([new f.LineRangeMapping(new o.LineRange(1,e.length+1),new o.LineRange(1,t.length+1),[new f.RangeMapping(new h.Range(1,1,e.length,e[0].length+1),new h.Range(1,1,t.length,t[0].length+1))])],[],!1);const s=0===n.maxComputationTimeMs?g.InfiniteTimeout.instance:new g.DateTimeout(n.maxComputationTimeMs),a=!n.ignoreTrimWhitespace,l=new Map;function m(e){let t=l.get(e);return void 0===t&&(t=l.size,l.set(e,t)),t}const c=e.map((e=>m(e.trim()))),L=t.map((e=>m(e.trim()))),b=new C(c,e),R=new C(L,t),p=(()=>b.length+R.length<1700?this.dynamicProgrammingDiffing.compute(b,R,s,((n,i)=>e[n]===t[i]?0===t[i].length?.1:1+Math.log(1+t[i].length):.99)):this.myersDiffingAlgorithm.compute(b,R))();let N=p.diffs,_=p.hitTimeout;N=(0,d.optimizeSequenceDiffs)(b,R,N),N=(0,d.removeRandomLineMatches)(b,R,N);const v=[],S=n=>{if(a)for(let i=0;i<n;i++){const n=w+i,r=x+i;if(e[n]!==t[r]){const i=this.refineDiff(e,t,new g.SequenceDiff(new u.OffsetRange(n,n+1),new u.OffsetRange(r,r+1)),s,a);for(const e of i.mappings)v.push(e);i.hitTimeout&&(_=!0)}}};let w=0,x=0;for(const n of N){(0,r.assertFn)((()=>n.seq1Range.start-w==n.seq2Range.start-x)),S(n.seq1Range.start-w),w=n.seq1Range.endExclusive,x=n.seq2Range.endExclusive;const i=this.refineDiff(e,t,n,s,a);i.hitTimeout&&(_=!0);for(const e of i.mappings)v.push(e)}S(e.length-w);const y=E(v,e,t);let q=[];return n.computeMoves&&(q=this.computeMoves(y,e,t,c,L,s,a)),(0,r.assertFn)((()=>{function n(e,t){if(e.lineNumber<1||e.lineNumber>t.length)return!1;const n=t[e.lineNumber-1];return!(e.column<1||e.column>n.length+1)}function i(e,t){return!(e.startLineNumber<1||e.startLineNumber>t.length+1||e.endLineNumberExclusive<1||e.endLineNumberExclusive>t.length+1)}for(const r of y){if(!r.innerChanges)return!1;for(const i of r.innerChanges)if(!(n(i.modifiedRange.getStartPosition(),t)&&n(i.modifiedRange.getEndPosition(),t)&&n(i.originalRange.getStartPosition(),e)&&n(i.originalRange.getEndPosition(),e)))return!1;if(!i(r.modifiedRange,t)||!i(r.originalRange,e))return!1}return!0})),new f.LinesDiff(y,q,_)}computeMoves(e,t,n,r,a,u,l){const h=[],m=e.filter((e=>e.modifiedRange.isEmpty&&e.originalRange.length>=3)).map((e=>new D(e.originalRange,t,e))),d=new Set(e.filter((e=>e.originalRange.isEmpty&&e.modifiedRange.length>=3)).map((e=>new D(e.modifiedRange,n,e)))),c=new Set;for(const e of m){let t,n=-1;for(const i of d){const r=e.computeSimilarity(i);r>n&&(n=r,t=i)}if(n>.9&&t&&(d.delete(t),h.push(new f.SimpleLineRangeMapping(e.range,t.range)),c.add(e.source),c.add(t.source)),!u.isValid())return[]}const p=new s.SetMap;for(const t of e)if(!c.has(t))for(let e=t.originalRange.startLineNumber;e<t.originalRange.endLineNumberExclusive-2;e++){const t=`${r[e-1]}:${r[e+1-1]}:${r[e+2-1]}`;p.add(t,{range:new o.LineRange(e,e+3)})}const N=[];e.sort((0,i.compareBy)((e=>e.modifiedRange.startLineNumber),i.numberComparator));for(const t of e){if(c.has(t))continue;let e=[];for(let n=t.modifiedRange.startLineNumber;n<t.modifiedRange.endLineNumberExclusive-2;n++){const t=`${a[n-1]}:${a[n+1-1]}:${a[n+2-1]}`,i=new o.LineRange(n,n+3),r=[];p.forEach(t,(({range:t})=>{for(const n of e)if(n.originalLineRange.endLineNumberExclusive+1===t.endLineNumberExclusive&&n.modifiedLineRange.endLineNumberExclusive+1===i.endLineNumberExclusive)return n.originalLineRange=new o.LineRange(n.originalLineRange.startLineNumber,t.endLineNumberExclusive),n.modifiedLineRange=new o.LineRange(n.modifiedLineRange.startLineNumber,i.endLineNumberExclusive),void r.push(n);const n={modifiedLineRange:i,originalLineRange:t};N.push(n),r.push(n)})),e=r}if(!u.isValid())return[]}N.sort((0,i.reverseOrder)((0,i.compareBy)((e=>e.modifiedLineRange.length),i.numberComparator)));const C=new R,_=new R;for(const e of N){const t=e.modifiedLineRange.startLineNumber-e.originalLineRange.startLineNumber,n=b(C.subtractFrom(e.modifiedLineRange),_.subtractFrom(e.originalLineRange).map((e=>e.delta(t))));for(const e of n){if(e.length<3)continue;const n=e,i=e.delta(-t);h.push(new f.SimpleLineRangeMapping(i,n)),C.addRange(n),_.addRange(i)}}if(h.sort((0,i.compareBy)((e=>e.original.startLineNumber),i.numberComparator)),0===h.length)return[];let v=[h[0]];for(let e=1;e<h.length;e++){const n=v[v.length-1],i=h[e],r=i.original.startLineNumber-n.original.endLineNumberExclusive,s=i.modified.startLineNumber-n.modified.endLineNumberExclusive;r>=0&&s>=0&&r+s<=2?v[v.length-1]=n.join(i):i.original.toOffsetRange().slice(t).map((e=>e.trim())).join("\n").length<=10||v.push(i)}const S=L.createOfSorted(e,(e=>e.originalRange.endLineNumberExclusive),i.numberComparator);return v=v.filter((e=>{const t=S.findLastItemBeforeOrEqual(e.original.startLineNumber)||new f.LineRangeMapping(new o.LineRange(1,1),new o.LineRange(1,1),[]);return e.modified.startLineNumber-t.modifiedRange.endLineNumberExclusive!=e.original.startLineNumber-t.originalRange.endLineNumberExclusive})),v.map((e=>{const i=E(this.refineDiff(t,n,new g.SequenceDiff(e.original.toOffsetRange(),e.modified.toOffsetRange()),u,l).mappings,t,n,!0);return new f.MovedText(e,i)}))}refineDiff(e,t,n,i,r){const s=new v(e,n.seq1Range,r),a=new v(t,n.seq2Range,r),o=s.length+a.length<500?this.dynamicProgrammingDiffing.compute(s,a,i):this.myersDiffingAlgorithm.compute(s,a,i);let l=o.diffs;return l=(0,d.optimizeSequenceDiffs)(s,a,l),l=function(e,t,n){const i=[];let r;function s(){if(!r)return;const e=r.s1Range.length-r.deleted;r.s2Range.length,r.added,Math.max(r.deleted,r.added)+(r.count-1)>e&&i.push(new g.SequenceDiff(r.s1Range,r.s2Range)),r=void 0}for(const a of n){function o(e,t){if(!r||!r.s1Range.containsRange(e)||!r.s2Range.containsRange(t))if(!r||r.s1Range.endExclusive<e.start&&r.s2Range.endExclusive<t.start)s(),r={added:0,deleted:0,count:0,s1Range:e,s2Range:t};else{const n=u.OffsetRange.tryCreate(r.s1Range.endExclusive,e.start),i=u.OffsetRange.tryCreate(r.s2Range.endExclusive,t.start);r.deleted+=n?.length??0,r.added+=i?.length??0,r.s1Range=r.s1Range.join(e),r.s2Range=r.s2Range.join(t)}const n=e.intersect(a.seq1Range),i=t.intersect(a.seq2Range);r.count++,r.deleted+=n?.length??0,r.added+=i?.length??0}const l=e.findWordContaining(a.seq1Range.start-1),h=t.findWordContaining(a.seq2Range.start-1),m=e.findWordContaining(a.seq1Range.endExclusive),d=t.findWordContaining(a.seq2Range.endExclusive);l&&m&&h&&d&&l.equals(m)&&h.equals(d)?o(l,h):(l&&h&&o(l,h),m&&d&&o(m,d))}return s(),function(e,t){const n=[];for(;e.length>0||t.length>0;){const i=e[0],r=t[0];let s;s=i&&(!r||i.seq1Range.start<r.seq1Range.start)?e.shift():t.shift(),n.length>0&&n[n.length-1].seq1Range.endExclusive>=s.seq1Range.start?n[n.length-1]=n[n.length-1].join(s):n.push(s)}return n}(n,i)}(s,a,l),l=(0,d.smoothenSequenceDiffs)(s,a,l),l=(0,d.removeRandomMatches)(s,a,l),{mappings:l.map((e=>new f.RangeMapping(s.translateRange(e.seq1Range),a.translateRange(e.seq2Range)))),hitTimeout:o.hitTimeout}}};class L{static create(e,t,n){return e.sort(((e,i)=>n(t(e),t(i)))),new L(e,t,n)}static createOfSorted(e,t,n){return new L(e,t,n)}constructor(e,t,n){this._items=e,this._itemToDomain=t,this._domainComparator=n,this._currentIdx=0,this._lastValue=void 0,this._hasLastValue=!1}findLastItemBeforeOrEqual(e){if(this._hasLastValue&&i.CompareResult.isLessThan(this._domainComparator(e,this._lastValue)))throw new a.BugIndicatingError;for(this._lastValue=e,this._hasLastValue=!0;this._currentIdx<this._items.length&&i.CompareResult.isLessThanOrEqual(this._domainComparator(this._itemToDomain(this._items[this._currentIdx]),e));)this._currentIdx++;return 0===this._currentIdx?void 0:this._items[this._currentIdx-1]}}function b(e,t){const n=[];let i=0,r=0;for(;i<e.length&&r<t.length;){const s=e[i],a=t[r],o=s.intersect(a);o&&!o.isEmpty&&n.push(o),s.endLineNumberExclusive<a.endLineNumberExclusive?i++:r++}return n}class R{constructor(){this._normalizedRanges=[]}addRange(e){const t=p(this._normalizedRanges.findIndex((t=>t.endLineNumberExclusive>=e.startLineNumber)),this._normalizedRanges.length),n=(0,i.findLastIndex)(this._normalizedRanges,(t=>t.startLineNumber<=e.endLineNumberExclusive))+1;if(t===n)this._normalizedRanges.splice(t,0,e);else if(t===n-1){const n=this._normalizedRanges[t];this._normalizedRanges[t]=n.join(e)}else{const i=this._normalizedRanges[t].join(this._normalizedRanges[n-1]).join(e);this._normalizedRanges.splice(t,n-t,i)}}intersects(e){for(const t of this._normalizedRanges)if(t.intersectsStrict(e))return!0;return!1}subtractFrom(e){const t=p(this._normalizedRanges.findIndex((t=>t.endLineNumberExclusive>=e.startLineNumber)),this._normalizedRanges.length),n=(0,i.findLastIndex)(this._normalizedRanges,(t=>t.startLineNumber<=e.endLineNumberExclusive))+1;if(t===n)return[e];const r=[];let s=e.startLineNumber;for(let e=t;e<n;e++){const t=this._normalizedRanges[e];t.startLineNumber>s&&r.push(new o.LineRange(s,t.startLineNumber)),s=t.endLineNumberExclusive}return s<e.endLineNumberExclusive&&r.push(new o.LineRange(s,e.endLineNumberExclusive)),r}}function p(e,t){return-1===e?t:e}function E(e,t,n,i=!1){const s=[];for(const i of function*(e,t){let n,i;for(const t of e)void 0!==i&&(s=t,(r=i).originalRange.overlapOrTouch(s.originalRange)||r.modifiedRange.overlapOrTouch(s.modifiedRange))?n.push(t):(n&&(yield n),n=[t]),i=t;var r,s;n&&(yield n)}(e.map((e=>N(e,t,n))))){const e=i[0],t=i[i.length-1];s.push(new f.LineRangeMapping(e.originalRange.join(t.originalRange),e.modifiedRange.join(t.modifiedRange),i.map((e=>e.innerChanges[0]))))}return(0,r.assertFn)((()=>!(!i&&s.length>0&&s[0].originalRange.startLineNumber!==s[0].modifiedRange.startLineNumber)&&(0,r.checkAdjacentItems)(s,((e,t)=>t.originalRange.startLineNumber-e.originalRange.endLineNumberExclusive==t.modifiedRange.startLineNumber-e.modifiedRange.endLineNumberExclusive&&e.originalRange.endLineNumberExclusive<t.originalRange.startLineNumber&&e.modifiedRange.endLineNumberExclusive<t.modifiedRange.startLineNumber)))),s}function N(e,t,n){let i=0,r=0;1===e.modifiedRange.endColumn&&1===e.originalRange.endColumn&&e.originalRange.startLineNumber+i<=e.originalRange.endLineNumber&&e.modifiedRange.startLineNumber+i<=e.modifiedRange.endLineNumber&&(r=-1),e.modifiedRange.startColumn-1>=n[e.modifiedRange.startLineNumber-1].length&&e.originalRange.startColumn-1>=t[e.originalRange.startLineNumber-1].length&&e.originalRange.startLineNumber<=e.originalRange.endLineNumber+r&&e.modifiedRange.startLineNumber<=e.modifiedRange.endLineNumber+r&&(i=1);const s=new o.LineRange(e.originalRange.startLineNumber+i,e.originalRange.endLineNumber+1+r),a=new o.LineRange(e.modifiedRange.startLineNumber+i,e.modifiedRange.endLineNumber+1+r);return new f.LineRangeMapping(s,a,[e])}t.lineRangeMappingFromRangeMappings=E,t.getLineRangeMapping=N;class C{constructor(e,t){this.trimmedHash=e,this.lines=t}getElement(e){return this.trimmedHash[e]}get length(){return this.trimmedHash.length}getBoundaryScore(e){return 1e3-((0===e?0:_(this.lines[e-1]))+(e===this.lines.length?0:_(this.lines[e])))}getText(e){return this.lines.slice(e.start,e.endExclusive).join("\n")}isStronglyEqual(e,t){return this.lines[e]===this.lines[t]}}function _(e){let t=0;for(;t<e.length&&(32===e.charCodeAt(t)||9===e.charCodeAt(t));)t++;return t}t.LineSequence=C;class v{constructor(e,t,n){this.lines=e,this.considerWhitespaceChanges=n,this.elements=[],this.firstCharOffsetByLineMinusOne=[],this.additionalOffsetByLine=[];let i=!1;t.start>0&&t.endExclusive>=e.length&&(t=new u.OffsetRange(t.start-1,t.endExclusive),i=!0),this.lineRange=t;for(let t=this.lineRange.start;t<this.lineRange.endExclusive;t++){let r=e[t],s=0;if(i)s=r.length,r="",i=!1;else if(!n){const e=r.trimStart();s=r.length-e.length,r=e.trimEnd()}this.additionalOffsetByLine.push(s);for(let e=0;e<r.length;e++)this.elements.push(r.charCodeAt(e));t<e.length-1&&(this.elements.push("\n".charCodeAt(0)),this.firstCharOffsetByLineMinusOne[t-this.lineRange.start]=this.elements.length)}this.additionalOffsetByLine.push(0)}toString(){return`Slice: "${this.text}"`}get text(){return this.getText(new u.OffsetRange(0,this.length))}getText(e){return this.elements.slice(e.start,e.endExclusive).map((e=>String.fromCharCode(e))).join("")}getElement(e){return this.elements[e]}get length(){return this.elements.length}getBoundaryScore(e){const t=M(e>0?this.elements[e-1]:-1),n=M(e<this.elements.length?this.elements[e]:-1);if(6===t&&7===n)return 0;let i=0;return t!==n&&(i+=10,1===n&&(i+=1)),i+=q(t),i+=q(n),i}translateOffset(e){if(this.lineRange.isEmpty)return new l.Position(this.lineRange.start+1,1);let t=0,n=this.firstCharOffsetByLineMinusOne.length;for(;t<n;){const i=Math.floor((t+n)/2);this.firstCharOffsetByLineMinusOne[i]>e?n=i:t=i+1}const i=0===t?0:this.firstCharOffsetByLineMinusOne[t-1];return new l.Position(this.lineRange.start+t+1,e-i+1+this.additionalOffsetByLine[t])}translateRange(e){return h.Range.fromPositions(this.translateOffset(e.start),this.translateOffset(e.endExclusive))}findWordContaining(e){if(e<0||e>=this.elements.length)return;if(!x(this.elements[e]))return;let t=e;for(;t>0&&x(this.elements[t-1]);)t--;let n=e;for(;n<this.elements.length&&x(this.elements[n]);)n++;return new u.OffsetRange(t,n)}countLinesIn(e){return this.translateOffset(e.endExclusive).lineNumber-this.translateOffset(e.start).lineNumber}isStronglyEqual(e,t){return this.elements[e]===this.elements[t]}extendToFullLines(e){const t=S(this.firstCharOffsetByLineMinusOne,(t=>t<=e.start))??0,n=w(this.firstCharOffsetByLineMinusOne,(t=>e.endExclusive<=t))??this.elements.length;return new u.OffsetRange(t,n)}}function S(e,t){const n=function(e,t){let n=0,i=e.length;for(;n<i;){const r=Math.floor((n+i)/2);t(e[r])?n=r+1:i=r}return n-1}(e,t);return-1===n?void 0:e[n]}function w(e,t){const n=function(e,t){let n=0,i=e.length;for(;n<i;){const r=Math.floor((n+i)/2);t(e[r])?i=r:n=r+1}return n}(e,t);return n===e.length?void 0:e[n]}function x(e){return e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}t.LinesSliceCharSequence=v,t.findLastMonotonous=S,t.findFirstMonotonous=w;const y={0:0,1:0,2:0,3:10,4:2,5:3,6:10,7:10};function q(e){return y[e]}function M(e){return 10===e?7:13===e?6:function(e){return 32===e||9===e}(e)?5:e>=97&&e<=122?0:e>=65&&e<=90?1:e>=48&&e<=57?2:-1===e?3:4}const O=new Map;function A(e){let t=O.get(e);return void 0===t&&(t=O.size,O.set(e,t)),t}class D{constructor(e,t,n){this.range=e,this.lines=t,this.source=n,this.histogram=[];let i=0;for(let n=e.startLineNumber-1;n<e.endLineNumberExclusive-1;n++){const e=t[n];for(let t=0;t<e.length;t++){i++;const n=A(e[t]);this.histogram[n]=(this.histogram[n]||0)+1}i++;const r=A("\n");this.histogram[r]=(this.histogram[r]||0)+1}this.totalCount=i}computeSimilarity(e){let t=0;const n=Math.max(this.histogram.length,e.histogram.length);for(let i=0;i<n;i++)t+=Math.abs((this.histogram[i]??0)-(e.histogram[i]??0));return 1-t/(this.totalCount+e.totalCount)}}},311:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DateTimeout=t.InfiniteTimeout=t.SequenceDiff=t.DiffAlgorithmResult=void 0;const i=n(190),r=n(314);class s{static trivial(e,t){return new s([new a(new r.OffsetRange(0,e.length),new r.OffsetRange(0,t.length))],!1)}static trivialTimedOut(e,t){return new s([new a(new r.OffsetRange(0,e.length),new r.OffsetRange(0,t.length))],!0)}constructor(e,t){this.diffs=e,this.hitTimeout=t}}t.DiffAlgorithmResult=s;class a{constructor(e,t){this.seq1Range=e,this.seq2Range=t}reverse(){return new a(this.seq2Range,this.seq1Range)}toString(){return`${this.seq1Range} <-> ${this.seq2Range}`}join(e){return new a(this.seq1Range.join(e.seq1Range),this.seq2Range.join(e.seq2Range))}delta(e){return 0===e?this:new a(this.seq1Range.delta(e),this.seq2Range.delta(e))}}t.SequenceDiff=a;class o{isValid(){return!0}}t.InfiniteTimeout=o,o.instance=new o,t.DateTimeout=class{constructor(e){if(this.timeout=e,this.startTime=Date.now(),this.valid=!0,e<=0)throw new i.BugIndicatingError("timeout must be positive")}isValid(){return!(Date.now()-this.startTime<this.timeout)&&this.valid&&(this.valid=!1),this.valid}disable(){this.timeout=Number.MAX_SAFE_INTEGER,this.isValid=()=>!0,this.valid=!0}}},63:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DynamicProgrammingDiffing=void 0;const i=n(314),r=n(311),s=n(378);t.DynamicProgrammingDiffing=class{compute(e,t,n=r.InfiniteTimeout.instance,a){if(0===e.length||0===t.length)return r.DiffAlgorithmResult.trivial(e,t);const o=new s.Array2D(e.length,t.length),u=new s.Array2D(e.length,t.length),l=new s.Array2D(e.length,t.length);for(let i=0;i<e.length;i++)for(let s=0;s<t.length;s++){if(!n.isValid())return r.DiffAlgorithmResult.trivialTimedOut(e,t);const h=0===i?0:o.get(i-1,s),g=0===s?0:o.get(i,s-1);let m;e.getElement(i)===t.getElement(s)?(m=0===i||0===s?0:o.get(i-1,s-1),i>0&&s>0&&3===u.get(i-1,s-1)&&(m+=l.get(i-1,s-1)),m+=a?a(i,s):1):m=-1;const d=Math.max(h,g,m);if(d===m){const e=i>0&&s>0?l.get(i-1,s-1):0;l.set(i,s,e+1),u.set(i,s,3)}else d===h?(l.set(i,s,0),u.set(i,s,1)):d===g&&(l.set(i,s,0),u.set(i,s,2));o.set(i,s,d)}const h=[];let g=e.length,m=t.length;function d(e,t){e+1===g&&t+1===m||h.push(new r.SequenceDiff(new i.OffsetRange(e+1,g),new i.OffsetRange(t+1,m))),g=e,m=t}let c=e.length-1,f=t.length-1;for(;c>=0&&f>=0;)3===u.get(c,f)?(d(c,f),c--,f--):1===u.get(c,f)?c--:f--;return d(-1,-1),h.reverse(),new r.DiffAlgorithmResult(h,!1)}}},890:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.shiftSequenceDiffs=t.joinSequenceDiffs=t.removeRandomMatches=t.removeRandomLineMatches=t.smoothenSequenceDiffs=t.optimizeSequenceDiffs=void 0;const i=n(314),r=n(311);function s(e,t,n){if(0===n.length)return n;const s=[];s.push(n[0]);for(let a=1;a<n.length;a++){const o=s[s.length-1];let u=n[a];if(u.seq1Range.isEmpty||u.seq2Range.isEmpty){const n=u.seq1Range.start-o.seq1Range.endExclusive;let a;for(a=1;a<=n&&e.getElement(u.seq1Range.start-a)===e.getElement(u.seq1Range.endExclusive-a)&&t.getElement(u.seq2Range.start-a)===t.getElement(u.seq2Range.endExclusive-a);a++);if(a--,a===n){s[s.length-1]=new r.SequenceDiff(new i.OffsetRange(o.seq1Range.start,u.seq1Range.endExclusive-n),new i.OffsetRange(o.seq2Range.start,u.seq2Range.endExclusive-n));continue}u=u.delta(-a)}s.push(u)}const a=[];for(let n=0;n<s.length-1;n++){const o=s[n+1];let u=s[n];if(u.seq1Range.isEmpty||u.seq2Range.isEmpty){const a=o.seq1Range.start-u.seq1Range.endExclusive;let l;for(l=0;l<a&&e.getElement(u.seq1Range.start+l)===e.getElement(u.seq1Range.endExclusive+l)&&t.getElement(u.seq2Range.start+l)===t.getElement(u.seq2Range.endExclusive+l);l++);if(l===a){s[n+1]=new r.SequenceDiff(new i.OffsetRange(u.seq1Range.start+a,o.seq1Range.endExclusive),new i.OffsetRange(u.seq2Range.start+a,o.seq2Range.endExclusive));continue}l>0&&(u=u.delta(l))}a.push(u)}return s.length>0&&a.push(s[s.length-1]),a}function a(e,t,n){if(!e.getBoundaryScore||!t.getBoundaryScore)return n;for(let r=0;r<n.length;r++){const s=r>0?n[r-1]:void 0,a=n[r],u=r+1<n.length?n[r+1]:void 0,l=new i.OffsetRange(s?s.seq1Range.start+1:0,u?u.seq1Range.endExclusive-1:e.length),h=new i.OffsetRange(s?s.seq2Range.start+1:0,u?u.seq2Range.endExclusive-1:t.length);a.seq1Range.isEmpty?n[r]=o(a,e,t,l,h):a.seq2Range.isEmpty&&(n[r]=o(a.reverse(),t,e,h,l).reverse())}return n}function o(e,t,n,i,r){let s=1;for(;e.seq1Range.start-s>=i.start&&e.seq2Range.start-s>=r.start&&n.isStronglyEqual(e.seq2Range.start-s,e.seq2Range.endExclusive-s)&&s<100;)s++;s--;let a=0;for(;e.seq1Range.start+a<i.endExclusive&&e.seq2Range.endExclusive+a<r.endExclusive&&n.isStronglyEqual(e.seq2Range.start+a,e.seq2Range.endExclusive+a)&&a<100;)a++;if(0===s&&0===a)return e;let o=0,u=-1;for(let i=-s;i<=a;i++){const r=e.seq2Range.start+i,s=e.seq2Range.endExclusive+i,a=e.seq1Range.start+i,l=t.getBoundaryScore(a)+n.getBoundaryScore(r)+n.getBoundaryScore(s);l>u&&(u=l,o=i)}return e.delta(o)}t.optimizeSequenceDiffs=function(e,t,n){let i=n;return i=s(e,t,i),i=a(e,t,i),i},t.smoothenSequenceDiffs=function(e,t,n){const i=[];for(const e of n){const t=i[i.length-1];t&&(e.seq1Range.start-t.seq1Range.endExclusive<=2||e.seq2Range.start-t.seq2Range.endExclusive<=2)?i[i.length-1]=new r.SequenceDiff(t.seq1Range.join(e.seq1Range),t.seq2Range.join(e.seq2Range)):i.push(e)}return i},t.removeRandomLineMatches=function(e,t,n){let r=n;if(0===r.length)return r;let s,a=0;do{s=!1;const o=[r[0]];for(let u=1;u<r.length;u++){const l=r[u],h=o[o.length-1];function g(t,n){const r=new i.OffsetRange(h.seq1Range.endExclusive,l.seq1Range.start);return e.getText(r).replace(/\s/g,"").length<=4&&(t.seq1Range.length+t.seq2Range.length>5||n.seq1Range.length+n.seq2Range.length>5)}g(h,l)?(s=!0,o[o.length-1]=o[o.length-1].join(l)):o.push(l)}r=o}while(a++<10&&s);return r},t.removeRandomMatches=function(e,t,n){let s=n;if(0===s.length)return s;let a,o=0;do{a=!1;const u=[s[0]];for(let l=1;l<s.length;l++){const h=s[l],g=u[u.length-1];function m(n,r){const s=new i.OffsetRange(g.seq1Range.endExclusive,h.seq1Range.start);if(e.countLinesIn(s)>5||s.length>500)return!1;const a=e.getText(s).trim();if(a.length>20||a.split(/\r\n|\r|\n/).length>1)return!1;const o=e.countLinesIn(n.seq1Range),u=n.seq1Range.length,l=t.countLinesIn(n.seq2Range),m=n.seq2Range.length,d=e.countLinesIn(r.seq1Range),c=r.seq1Range.length,f=t.countLinesIn(r.seq2Range),L=r.seq2Range.length;function b(e){return Math.min(e,130)}return Math.pow(Math.pow(b(40*o+u),1.5)+Math.pow(b(40*l+m),1.5),1.5)+Math.pow(Math.pow(b(40*d+c),1.5)+Math.pow(b(40*f+L),1.5),1.5)>74184.96480721243}m(g,h)?(a=!0,u[u.length-1]=u[u.length-1].join(h)):u.push(h)}s=u}while(o++<10&&a);for(let d=0;d<s.length;d++){const c=s[d];let f=c.seq1Range,L=c.seq2Range;const b=e.extendToFullLines(c.seq1Range),R=e.getText(new i.OffsetRange(b.start,c.seq1Range.start));R.length>0&&R.trim().length<=3&&c.seq1Range.length+c.seq2Range.length>100&&(f=c.seq1Range.deltaStart(-R.length),L=c.seq2Range.deltaStart(-R.length));const p=e.getText(new i.OffsetRange(c.seq1Range.endExclusive,b.endExclusive));p.length>0&&p.trim().length<=3&&c.seq1Range.length+c.seq2Range.length>150&&(f=f.deltaEnd(p.length),L=L.deltaEnd(p.length)),s[d]=new r.SequenceDiff(f,L)}return s},t.joinSequenceDiffs=s,t.shiftSequenceDiffs=a},92:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MyersDiffAlgorithm=void 0;const i=n(314),r=n(311);t.MyersDiffAlgorithm=class{compute(e,t,n=r.InfiniteTimeout.instance){if(0===e.length||0===t.length)return r.DiffAlgorithmResult.trivial(e,t);function u(n,i){for(;n<e.length&&i<t.length&&e.getElement(n)===t.getElement(i);)n++,i++;return n}let l=0;const h=new a;h.set(0,u(0,0));const g=new o;g.set(0,0===h.get(0)?null:new s(null,0,0,h.get(0)));let m=0;e:for(;;){if(l++,!n.isValid())return r.DiffAlgorithmResult.trivialTimedOut(e,t);const i=-Math.min(l,t.length+l%2),a=Math.min(l,e.length+l%2);for(m=i;m<=a;m+=2){const n=m===a?-1:h.get(m+1),r=m===i?-1:h.get(m-1)+1,o=Math.min(Math.max(n,r),e.length),l=o-m;if(o>e.length||l>t.length)continue;const d=u(o,l);h.set(m,d);const c=o===n?g.get(m+1):g.get(m-1);if(g.set(m,d!==o?new s(c,o,l,d-o):c),h.get(m)===e.length&&h.get(m)-m===t.length)break e}}let d=g.get(m);const c=[];let f=e.length,L=t.length;for(;;){const e=d?d.x+d.length:0,t=d?d.y+d.length:0;if(e===f&&t===L||c.push(new r.SequenceDiff(new i.OffsetRange(e,f),new i.OffsetRange(t,L))),!d)break;f=d.x,L=d.y,d=d.prev}return c.reverse(),new r.DiffAlgorithmResult(c,!1)}};class s{constructor(e,t,n,i){this.prev=e,this.x=t,this.y=n,this.length=i}}class a{constructor(){this.positiveArr=new Int32Array(10),this.negativeArr=new Int32Array(10)}get(e){return e<0?(e=-e-1,this.negativeArr[e]):this.positiveArr[e]}set(e,t){if(e<0){if((e=-e-1)>=this.negativeArr.length){const e=this.negativeArr;this.negativeArr=new Int32Array(2*e.length),this.negativeArr.set(e)}this.negativeArr[e]=t}else{if(e>=this.positiveArr.length){const e=this.positiveArr;this.positiveArr=new Int32Array(2*e.length),this.positiveArr.set(e)}this.positiveArr[e]=t}}}class o{constructor(){this.positiveArr=[],this.negativeArr=[]}get(e){return e<0?(e=-e-1,this.negativeArr[e]):this.positiveArr[e]}set(e,t){e<0?(e=-e-1,this.negativeArr[e]=t):this.positiveArr[e]=t}}},378:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Array2D=void 0,t.Array2D=class{constructor(e,t){this.width=e,this.height=t,this.array=[],this.array=new Array(e*t)}get(e,t){return this.array[e+t*this.width]}set(e,t,n){this.array[e+t*this.width]=n}}},464:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DiffComputer=t.LegacyLinesDiffComputer=void 0;const i=n(113),r=n(197),s=n(734),a=n(638),o=n(541),u=n(420);function l(e,t,n,i){return new r.LcsDiff(e,t,n).ComputeDiff(i)}t.LegacyLinesDiffComputer=class{computeDiff(e,t,n){const r=new c(e,t,{maxComputationTime:n.maxComputationTimeMs,shouldIgnoreTrimWhitespace:n.ignoreTrimWhitespace,shouldComputeCharChanges:!0,shouldMakePrettyDiff:!0,shouldPostProcessCharChanges:!0}).computeDiff(),s=[];let l=null;for(const e of r.changes){let t,n;t=0===e.originalEndLineNumber?new a.LineRange(e.originalStartLineNumber+1,e.originalStartLineNumber+1):new a.LineRange(e.originalStartLineNumber,e.originalEndLineNumber+1),n=0===e.modifiedEndLineNumber?new a.LineRange(e.modifiedStartLineNumber+1,e.modifiedStartLineNumber+1):new a.LineRange(e.modifiedStartLineNumber,e.modifiedEndLineNumber+1);let i=new u.LineRangeMapping(t,n,e.charChanges?.map((e=>new u.RangeMapping(new o.Range(e.originalStartLineNumber,e.originalStartColumn,e.originalEndLineNumber,e.originalEndColumn),new o.Range(e.modifiedStartLineNumber,e.modifiedStartColumn,e.modifiedEndLineNumber,e.modifiedEndColumn)))));l&&(l.modifiedRange.endLineNumberExclusive!==i.modifiedRange.startLineNumber&&l.originalRange.endLineNumberExclusive!==i.originalRange.startLineNumber||(i=new u.LineRangeMapping(l.originalRange.join(i.originalRange),l.modifiedRange.join(i.modifiedRange),l.innerChanges&&i.innerChanges?l.innerChanges.concat(i.innerChanges):void 0),s.pop())),s.push(i),l=i}return(0,i.assertFn)((()=>(0,i.checkAdjacentItems)(s,((e,t)=>t.originalRange.startLineNumber-e.originalRange.endLineNumberExclusive==t.modifiedRange.startLineNumber-e.modifiedRange.endLineNumberExclusive&&e.originalRange.endLineNumberExclusive<t.originalRange.startLineNumber&&e.modifiedRange.endLineNumberExclusive<t.modifiedRange.startLineNumber)))),new u.LinesDiff(s,[],r.quitEarly)}};class h{constructor(e){const t=[],n=[];for(let i=0,r=e.length;i<r;i++)t[i]=f(e[i],1),n[i]=L(e[i],1);this.lines=e,this._startColumns=t,this._endColumns=n}getElements(){const e=[];for(let t=0,n=this.lines.length;t<n;t++)e[t]=this.lines[t].substring(this._startColumns[t]-1,this._endColumns[t]-1);return e}getStrictElement(e){return this.lines[e]}getStartLineNumber(e){return e+1}getEndLineNumber(e){return e+1}createCharSequence(e,t,n){const i=[],r=[],s=[];let a=0;for(let o=t;o<=n;o++){const t=this.lines[o],u=e?this._startColumns[o]:1,l=e?this._endColumns[o]:t.length+1;for(let e=u;e<l;e++)i[a]=t.charCodeAt(e-1),r[a]=o+1,s[a]=e,a++;!e&&o<n&&(i[a]=10,r[a]=o+1,s[a]=t.length+1,a++)}return new g(i,r,s)}}class g{constructor(e,t,n){this._charCodes=e,this._lineNumbers=t,this._columns=n}toString(){return"["+this._charCodes.map(((e,t)=>(10===e?"\\n":String.fromCharCode(e))+`-(${this._lineNumbers[t]},${this._columns[t]})`)).join(", ")+"]"}_assertIndex(e,t){if(e<0||e>=t.length)throw new Error("Illegal index")}getElements(){return this._charCodes}getStartLineNumber(e){return e>0&&e===this._lineNumbers.length?this.getEndLineNumber(e-1):(this._assertIndex(e,this._lineNumbers),this._lineNumbers[e])}getEndLineNumber(e){return-1===e?this.getStartLineNumber(e+1):(this._assertIndex(e,this._lineNumbers),10===this._charCodes[e]?this._lineNumbers[e]+1:this._lineNumbers[e])}getStartColumn(e){return e>0&&e===this._columns.length?this.getEndColumn(e-1):(this._assertIndex(e,this._columns),this._columns[e])}getEndColumn(e){return-1===e?this.getStartColumn(e+1):(this._assertIndex(e,this._columns),10===this._charCodes[e]?1:this._columns[e]+1)}}class m{constructor(e,t,n,i,r,s,a,o){this.originalStartLineNumber=e,this.originalStartColumn=t,this.originalEndLineNumber=n,this.originalEndColumn=i,this.modifiedStartLineNumber=r,this.modifiedStartColumn=s,this.modifiedEndLineNumber=a,this.modifiedEndColumn=o}static createFromDiffChange(e,t,n){const i=t.getStartLineNumber(e.originalStart),r=t.getStartColumn(e.originalStart),s=t.getEndLineNumber(e.originalStart+e.originalLength-1),a=t.getEndColumn(e.originalStart+e.originalLength-1),o=n.getStartLineNumber(e.modifiedStart),u=n.getStartColumn(e.modifiedStart),l=n.getEndLineNumber(e.modifiedStart+e.modifiedLength-1),h=n.getEndColumn(e.modifiedStart+e.modifiedLength-1);return new m(i,r,s,a,o,u,l,h)}}class d{constructor(e,t,n,i,r){this.originalStartLineNumber=e,this.originalEndLineNumber=t,this.modifiedStartLineNumber=n,this.modifiedEndLineNumber=i,this.charChanges=r}static createFromDiffResult(e,t,n,i,r,s,a){let o,u,h,g,c;if(0===t.originalLength?(o=n.getStartLineNumber(t.originalStart)-1,u=0):(o=n.getStartLineNumber(t.originalStart),u=n.getEndLineNumber(t.originalStart+t.originalLength-1)),0===t.modifiedLength?(h=i.getStartLineNumber(t.modifiedStart)-1,g=0):(h=i.getStartLineNumber(t.modifiedStart),g=i.getEndLineNumber(t.modifiedStart+t.modifiedLength-1)),s&&t.originalLength>0&&t.originalLength<20&&t.modifiedLength>0&&t.modifiedLength<20&&r()){const s=n.createCharSequence(e,t.originalStart,t.originalStart+t.originalLength-1),o=i.createCharSequence(e,t.modifiedStart,t.modifiedStart+t.modifiedLength-1);if(s.getElements().length>0&&o.getElements().length>0){let e=l(s,o,r,!0).changes;a&&(e=function(e){if(e.length<=1)return e;const t=[e[0]];let n=t[0];for(let i=1,r=e.length;i<r;i++){const r=e[i],s=r.originalStart-(n.originalStart+n.originalLength),a=r.modifiedStart-(n.modifiedStart+n.modifiedLength);Math.min(s,a)<3?(n.originalLength=r.originalStart+r.originalLength-n.originalStart,n.modifiedLength=r.modifiedStart+r.modifiedLength-n.modifiedStart):(t.push(r),n=r)}return t}(e)),c=[];for(let t=0,n=e.length;t<n;t++)c.push(m.createFromDiffChange(e[t],s,o))}}return new d(o,u,h,g,c)}}class c{constructor(e,t,n){this.shouldComputeCharChanges=n.shouldComputeCharChanges,this.shouldPostProcessCharChanges=n.shouldPostProcessCharChanges,this.shouldIgnoreTrimWhitespace=n.shouldIgnoreTrimWhitespace,this.shouldMakePrettyDiff=n.shouldMakePrettyDiff,this.originalLines=e,this.modifiedLines=t,this.original=new h(e),this.modified=new h(t),this.continueLineDiff=b(n.maxComputationTime),this.continueCharDiff=b(0===n.maxComputationTime?0:Math.min(n.maxComputationTime,5e3))}computeDiff(){if(1===this.original.lines.length&&0===this.original.lines[0].length)return 1===this.modified.lines.length&&0===this.modified.lines[0].length?{quitEarly:!1,changes:[]}:{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:1,modifiedStartLineNumber:1,modifiedEndLineNumber:this.modified.lines.length,charChanges:void 0}]};if(1===this.modified.lines.length&&0===this.modified.lines[0].length)return{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:this.original.lines.length,modifiedStartLineNumber:1,modifiedEndLineNumber:1,charChanges:void 0}]};const e=l(this.original,this.modified,this.continueLineDiff,this.shouldMakePrettyDiff),t=e.changes,n=e.quitEarly;if(this.shouldIgnoreTrimWhitespace){const e=[];for(let n=0,i=t.length;n<i;n++)e.push(d.createFromDiffResult(this.shouldIgnoreTrimWhitespace,t[n],this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges));return{quitEarly:n,changes:e}}const i=[];let r=0,s=0;for(let e=-1,n=t.length;e<n;e++){const a=e+1<n?t[e+1]:null,o=a?a.originalStart:this.originalLines.length,u=a?a.modifiedStart:this.modifiedLines.length;for(;r<o&&s<u;){const e=this.originalLines[r],t=this.modifiedLines[s];if(e!==t){{let n=f(e,1),a=f(t,1);for(;n>1&&a>1&&e.charCodeAt(n-2)===t.charCodeAt(a-2);)n--,a--;(n>1||a>1)&&this._pushTrimWhitespaceCharChange(i,r+1,1,n,s+1,1,a)}{let n=L(e,1),a=L(t,1);const o=e.length+1,u=t.length+1;for(;n<o&&a<u&&e.charCodeAt(n-1)===e.charCodeAt(a-1);)n++,a++;(n<o||a<u)&&this._pushTrimWhitespaceCharChange(i,r+1,n,o,s+1,a,u)}}r++,s++}a&&(i.push(d.createFromDiffResult(this.shouldIgnoreTrimWhitespace,a,this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges)),r+=a.originalLength,s+=a.modifiedLength)}return{quitEarly:n,changes:i}}_pushTrimWhitespaceCharChange(e,t,n,i,r,s,a){if(this._mergeTrimWhitespaceCharChange(e,t,n,i,r,s,a))return;let o;this.shouldComputeCharChanges&&(o=[new m(t,n,t,i,r,s,r,a)]),e.push(new d(t,t,r,r,o))}_mergeTrimWhitespaceCharChange(e,t,n,i,r,s,a){const o=e.length;if(0===o)return!1;const u=e[o-1];return 0!==u.originalEndLineNumber&&0!==u.modifiedEndLineNumber&&(u.originalEndLineNumber===t&&u.modifiedEndLineNumber===r?(this.shouldComputeCharChanges&&u.charChanges&&u.charChanges.push(new m(t,n,t,i,r,s,r,a)),!0):u.originalEndLineNumber+1===t&&u.modifiedEndLineNumber+1===r&&(u.originalEndLineNumber=t,u.modifiedEndLineNumber=r,this.shouldComputeCharChanges&&u.charChanges&&u.charChanges.push(new m(t,n,t,i,r,s,r,a)),!0))}}function f(e,t){const n=s.firstNonWhitespaceIndex(e);return-1===n?t:n+1}function L(e,t){const n=s.lastNonWhitespaceIndex(e);return-1===n?t:n+2}function b(e){if(0===e)return()=>!0;const t=Date.now();return()=>Date.now()-t<e}t.DiffComputer=c},420:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MovedText=t.SimpleLineRangeMapping=t.RangeMapping=t.LineRangeMapping=t.LinesDiff=void 0;const i=n(638);t.LinesDiff=class{constructor(e,t,n){this.changes=e,this.moves=t,this.hitTimeout=n}};class r{static inverse(e,t,n){const s=[];let a=1,o=1;for(const t of e){const e=new r(new i.LineRange(a,t.originalRange.startLineNumber),new i.LineRange(o,t.modifiedRange.startLineNumber),void 0);e.modifiedRange.isEmpty||s.push(e),a=t.originalRange.endLineNumberExclusive,o=t.modifiedRange.endLineNumberExclusive}const u=new r(new i.LineRange(a,t+1),new i.LineRange(o,n+1),void 0);return u.modifiedRange.isEmpty||s.push(u),s}constructor(e,t,n){this.originalRange=e,this.modifiedRange=t,this.innerChanges=n}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}get changedLineCount(){return Math.max(this.originalRange.length,this.modifiedRange.length)}flip(){return new r(this.modifiedRange,this.originalRange,this.innerChanges?.map((e=>e.flip())))}}t.LineRangeMapping=r;class s{constructor(e,t){this.originalRange=e,this.modifiedRange=t}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}flip(){return new s(this.modifiedRange,this.originalRange)}}t.RangeMapping=s;class a{constructor(e,t){this.original=e,this.modified=t}toString(){return`{${this.original.toString()}->${this.modified.toString()}}`}flip(){return new a(this.modified,this.original)}join(e){return new a(this.original.join(e.original),this.modified.join(e.modified))}}t.SimpleLineRangeMapping=a;class o{constructor(e,t){this.lineRangeMapping=e,this.changes=t}flip(){return new o(this.lineRangeMapping.flip(),this.changes.map((e=>e.flip())))}}t.MovedText=o}},n={};function i(e){var r=n[e];if(void 0!==r)return r.exports;var s=n[e]={exports:{}};return t[e].call(s.exports,s,s.exports,i),s.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e=i(790),window.vscdiff=e})();

import { advancedDynamicSort, createElement, flattenChildNodes, logAndReturn } from "./synced/jstools/index.js";

function arraySubstring(indexStart, charStart, indexEnd, charEnd, array) {
    let result = [];
    let charStartIdx, charEndIdx;
    for (var i = indexStart; i < indexEnd; i++) {
        if (i == indexStart) {
            charStartIdx = charStart;
        } else {
            charStartIdx = 0;
        }
        if (i == indexEnd) {
            charEndIdx = charEnd;
        } else {
            charEndIdx = Infinity;
        }
        console.log(array, array[i], i, charStartIdx, charEndIdx, array[i].substring(charStartIdx, charEndIdx));
        result.push(array[i].substring(charStartIdx, charEndIdx));
    }
    return result;
}

function computeDiff(originalTextLines, modifiedTextLines, options, algorithm) {
    let result = new vscdiff.DiffComputer(originalTextLines, modifiedTextLines, options).computeDiff(originalTextLines, modifiedTextLines, options);
    result.changes = result.changes.sort(advancedDynamicSort("originalStartLineNumber", "charChanges.originalStartColumn")).map(e => e);
    let finalOriginal = [], finalModified = [];
    result.changes.forEach(function (change) {
        // finalOriginal.push(arraySubstring(change.charChanges[0].originalStartLineNumber - 1, change.charChanges[0].originalStartColumn, change.charChanges[0].originalEndLineNumber, change.charChanges[0].originalEndColumn, originalTextLines));
    });
    console.log(finalOriginal);
    return result;
}

// let linesBefore = (await fetch("/js/synced/jstools/index.js").then(e=>e.text())).split("\n");
// let linesAfter = (await fetch("/js/synced/jstools.golfed.js").then(e=>e.text())).split("\n");

// let computed = computeDiff(linesBefore, linesAfter, {
//     shouldPostProcessCharChanges: true,
//     shouldIgnoreTrimWhitespace: false,
//     shouldMakePrettyDiff: false,
//     shouldComputeCharChanges: true,
//     maxComputationTime: 0
// });
// console.log("lines diff", JSON.stringify(computed, null, 2));

// let stringBefore = "abcdefg",
//     stringAfter = "abcegh";
String.prototype.replaceIndex = function (start, end, replacer) {
    let str = this;
    let before = str.substring(0, start);
    let after = str.substring(end);
    if (typeof replacer == "function") {
        return before + replacer(str.substring(start, end)) + after;
    }
    return before + replacer + after;
}
let stringBefore = (await fetch("/js/synced/jstools/index.js").then(e => e.text())).replaceAll("<", "&lt;"),
    stringAfter = (await fetch("/js/synced/jstools.golfed.js").then(e => e.text())).replaceAll("<", "&lt;");
let stringDiff = vscdiff.stringDiff(stringBefore, stringAfter).sort(advancedDynamicSort("-originalStart"));
// console.log("stringDiff", stringDiff);
let finalBefore = [], finalAfter = [];
let final = stringBefore;

let lastBeforeIndex = 0, lastAfterIndex = 0;
// stringDiff.forEach(diff => {
//     final = final.replaceIndex(diff.originalStart, diff.originalStart + diff.originalLength, function (str) {
//         if (diff.originalLength == 0) { // add
//             return createElement("span", { classList: "add", innerHTML: stringAfter.substring(diff.modifiedStart, diff.modifiedStart + diff.modifiedLength) }).outerHTML;
//         } else if (diff.modifiedLength == 0) { // delete
//             return createElement("span", { classList: "delete", innerHTML: str }).outerHTML;
//         }
//     });
//     // finalAfter.push(stringAfter.substring(lastAfterIndex, diff.modifiedStart));
//     // finalBefore.push(stringBefore.substring(lastBeforeIndex, diff.originalStart));
//     // final.push(stringBefore.substring(lastBeforeIndex, diff.originalStart));
//     // if (diff.originalLength == 0) { // add
//     //     // finalAfter.push(createElement("span", { classList: "add", innerHTML: stringAfter.substring(diff.modifiedStart, diff.modifiedStart + diff.modifiedLength) }).outerHTML);
//     //     final.push(createElement("span", { classList: "add", innerHTML: stringAfter.substring(diff.modifiedStart, diff.modifiedStart + diff.modifiedLength) }).outerHTML)
//     // } else if (diff.modifiedLength == 0) { // delete
//     //     // finalBefore.push(createElement("span", { classList: "delete", innerHTML: stringBefore.substring(diff.originalStart, diff.originalStart + diff.originalLength) }).outerHTML);
//     //     final.push(createElement("span", { classList: "delete", innerHTML: stringBefore.substring(diff.originalStart, diff.originalStart + diff.originalLength) }).outerHTML)
//     // }
// });
// finalBefore.push(stringBefore.substring(stringDiff[stringDiff.length - 1].originalStart + stringDiff[stringDiff.length - 1].originalLength));
// finalAfter.push(stringAfter.substring(stringDiff[stringDiff.length - 1].modifiedStart + stringDiff[stringDiff.length - 1].modifiedLength));

// console.log("string diff", JSON.stringify(stringDiff, null, 2));
// console.log(finalBefore, finalAfter);

let result = createElement("div").add(
    createElement("pre", { innerHTML: final }),
);

// logAndReturn
(flattenChildNodes(result)).forEach(node => {
    if (node.nodeName.toLowerCase() == "#text") {
        node.textContent = node.textContent;
    }
});
document.body.innerHTML = result.outerHTML;
// stringDiff.forEach(e => { });